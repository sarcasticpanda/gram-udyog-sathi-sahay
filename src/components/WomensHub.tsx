
import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { BookOpen, ShoppingBag, Users, TrendingUp, Heart, Star } from 'lucide-react';

interface WomensHubProps {
  language: string;
}

const WomensHub: React.FC<WomensHubProps> = ({ language }) => {
  const [activeTab, setActiveTab] = useState('learn');

  const translations = {
    hindi: {
      title: '‡§Æ‡§π‡§ø‡§≤‡§æ ‡§ï‡•á‡§Ç‡§¶‡•ç‡§∞',
      learn: '‡§∏‡•Ä‡§ñ‡•á‡§Ç',
      sell: '‡§¨‡•á‡§ö‡•á‡§Ç',
      connect: '‡§ú‡•Å‡§°‡§º‡•á‡§Ç',
      invest: '‡§®‡§ø‡§µ‡•á‡§∂',
      learnSkills: '‡§®‡§à ‡§ï‡§≤‡§æ‡§è‡§Ç ‡§∏‡•Ä‡§ñ‡•á‡§Ç',
      sellProducts: '‡§Ö‡§™‡§®‡•á ‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§¨‡•á‡§ö‡•á‡§Ç',
      connectWomen: '‡§Æ‡§π‡§ø‡§≤‡§æ‡§ì‡§Ç ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•á‡§Ç',
      getInvestment: '‡§®‡§ø‡§µ‡•á‡§∂ ‡§™‡§æ‡§è‡§Ç',
      startLearning: '‡§∏‡•Ä‡§ñ‡§®‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç',
      listProduct: '‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§≤‡§ø‡§∏‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç',
      joinChat: '‡§ö‡•à‡§ü ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•ã‡§Ç',
      seekInvestor: '‡§®‡§ø‡§µ‡•á‡§∂‡§ï ‡§ñ‡•ã‡§ú‡•á‡§Ç',
      viewCourse: '‡§ï‡•ã‡§∞‡•ç‡§∏ ‡§¶‡•á‡§ñ‡•á‡§Ç',
      watchVideo: '‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§¶‡•á‡§ñ‡•á‡§Ç'
    },
    english: {
      title: 'Women\'s Hub',
      learn: 'Learn',
      sell: 'Sell',
      connect: 'Connect',
      invest: 'Invest',
      learnSkills: 'Learn New Skills',
      sellProducts: 'Sell Your Products',
      connectWomen: 'Connect with Women',
      getInvestment: 'Get Investment',
      startLearning: 'Start Learning',
      listProduct: 'List Product',
      joinChat: 'Join Chat',
      seekInvestor: 'Find Investor',
      viewCourse: 'View Course',
      watchVideo: 'Watch Video'
    }
  };

  const t = translations[language] || translations.english;

  const skillCourses = [
    {
      title: language === 'hindi' ? '‡§Ü‡§Æ ‡§ï‡§æ ‡§Ö‡§ö‡§æ‡§∞ ‡§¨‡§®‡§æ‡§®‡§æ' : 'Making Mango Pickle',
      duration: '10 ‡§Æ‡§ø‡§®‡§ü',
      level: '‡§Ü‡§∏‡§æ‡§®',
      students: 150,
      rating: 4.8,
      thumbnail: 'ü•í'
    },
    {
      title: language === 'hindi' ? '‡§π‡§æ‡§• ‡§∏‡•á ‡§¨‡•à‡§ó ‡§¨‡§®‡§æ‡§®‡§æ' : 'Handmade Bag Making',
      duration: '15 ‡§Æ‡§ø‡§®‡§ü',
      level: '‡§Æ‡§ß‡•ç‡§Ø‡§Æ',
      students: 89,
      rating: 4.9,
      thumbnail: 'üëú'
    },
    {
      title: language === 'hindi' ? '‡§∏‡§æ‡§¨‡•Å‡§® ‡§¨‡§®‡§æ‡§®‡§æ' : 'Soap Making',
      duration: '12 ‡§Æ‡§ø‡§®‡§ü',
      level: '‡§Ü‡§∏‡§æ‡§®',
      students: 203,
      rating: 4.7,
      thumbnail: 'üßº'
    },
    {
      title: language === 'hindi' ? 'UPI ‡§™‡•á‡§Æ‡•á‡§Ç‡§ü ‡§∏‡•Ä‡§ñ‡•á‡§Ç' : 'Learn UPI Payments',
      duration: '8 ‡§Æ‡§ø‡§®‡§ü',
      level: '‡§¨‡§π‡•Å‡§§ ‡§Ü‡§∏‡§æ‡§®',
      students: 45,
      rating: 4.6,
      thumbnail: 'üì±'
    }
  ];

  const products = [
    {
      name: language === 'hindi' ? '‡§ò‡§∞ ‡§ï‡§æ ‡§Ö‡§ö‡§æ‡§∞' : 'Homemade Pickle',
      price: '‚Çπ100',
      seller: '‡§™‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§¶‡•á‡§µ‡•Ä',
      location: '‡§ú‡§Ø‡§™‡•Å‡§∞',
      image: 'ü•í',
      rating: 4.5,
      reviews: 12
    },
    {
      name: language === 'hindi' ? '‡§π‡§∏‡•ç‡§§‡§®‡§ø‡§∞‡•ç‡§Æ‡§ø‡§§ ‡§∏‡§æ‡§°‡§º‡•Ä' : 'Handwoven Saree',
      price: '‚Çπ2500',
      seller: '‡§∏‡•Å‡§®‡•Ä‡§§‡§æ ‡§ú‡•Ä',
      location: '‡§ï‡•ã‡§ü‡§æ',
      image: 'ü•ª',
      rating: 5.0,
      reviews: 8
    },
    {
      name: language === 'hindi' ? '‡§™‡•ç‡§∞‡§æ‡§ï‡•É‡§§‡§ø‡§ï ‡§∏‡§æ‡§¨‡•Å‡§®' : 'Natural Soap',
      price: '‚Çπ80',
      seller: '‡§ó‡•Ä‡§§‡§æ ‡§∂‡§∞‡•ç‡§Æ‡§æ',
      location: '‡§â‡§¶‡§Ø‡§™‡•Å‡§∞',
      image: 'üßº',
      rating: 4.7,
      reviews: 15
    }
  ];

  const chatMessages = [
    {
      user: '‡§∞‡•á‡§ñ‡§æ ‡§ú‡•Ä',
      message: language === 'hindi' ? '‡§Æ‡•á‡§∞‡§æ ‡§Ö‡§ö‡§æ‡§∞ ‚Çπ80 ‡§Æ‡•á‡§Ç ‡§¨‡§ø‡§ï‡§æ! ‡§¨‡§π‡•Å‡§§ ‡§ñ‡•Å‡§∂‡•Ä!' : 'My pickle sold for ‚Çπ80! So happy!',
      time: '2 ‡§Æ‡§ø‡§®‡§ü ‡§™‡§π‡§≤‡•á'
    },
    {
      user: '‡§∏‡•Å‡§ß‡§æ',
      message: language === 'hindi' ? '‡§∏‡§æ‡§¨‡•Å‡§® ‡§¨‡§®‡§æ‡§®‡§æ ‡§∏‡•Ä‡§ñ‡§®‡§æ ‡§π‡•à, ‡§ï‡•ã‡§à ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡•á‡§ó‡§æ?' : 'Want to learn soap making, anyone help?',
      time: '5 ‡§Æ‡§ø‡§®‡§ü ‡§™‡§π‡§≤‡•á'
    },
    {
      user: '‡§Ö‡§®‡•Ä‡§§‡§æ ‡§¶‡•á‡§µ‡•Ä',
      message: language === 'hindi' ? '50 ‡§¨‡•à‡§ó ‡§ï‡§æ ‡§ë‡§∞‡•ç‡§°‡§∞ ‡§Ü‡§Ø‡§æ ‡§π‡•à! ‡§ï‡•å‡§® ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡•á‡§ó‡§æ?' : 'Got order for 50 bags! Who can help?',
      time: '10 ‡§Æ‡§ø‡§®‡§ü ‡§™‡§π‡§≤‡•á'
    }
  ];

  const investmentOpportunities = [
    {
      entrepreneur: '‡§∞‡§æ‡§ß‡§æ ‡§∂‡§∞‡•ç‡§Æ‡§æ',
      business: language === 'hindi' ? '‡§∏‡§æ‡§¨‡•Å‡§® ‡§ï‡§æ ‡§µ‡•ç‡§Ø‡§µ‡§∏‡§æ‡§Ø' : 'Soap Business',
      needed: '‚Çπ5,000',
      raised: '‚Çπ3,000',
      backers: 6,
      description: language === 'hindi' ? '‡§™‡•ç‡§∞‡§æ‡§ï‡•É‡§§‡§ø‡§ï ‡§∏‡§æ‡§¨‡•Å‡§® ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§ö‡•ç‡§ö‡§æ ‡§Æ‡§æ‡§≤ ‡§ö‡§æ‡§π‡§ø‡§è' : 'Need raw materials for natural soap making'
    },
    {
      entrepreneur: '‡§Æ‡•Ä‡§∞‡§æ ‡§¶‡•á‡§µ‡•Ä',
      business: language === 'hindi' ? '‡§Ö‡§ö‡§æ‡§∞ ‡§ï‡•Ä ‡§¶‡•Å‡§ï‡§æ‡§®' : 'Pickle Shop',
      needed: '‚Çπ8,000',
      raised: '‚Çπ2,500',
      backers: 4,
      description: language === 'hindi' ? '‡§Ö‡§ö‡§æ‡§∞ ‡§¨‡§®‡§æ‡§®‡•á ‡§î‡§∞ ‡§™‡•à‡§ï‡•á‡§ú‡§ø‡§Ç‡§ó ‡§ï‡•á ‡§≤‡§ø‡§è ‡§´‡§Ç‡§°' : 'Funds for pickle making and packaging'
    }
  ];

  return (
    <div className="space-y-6">
      <div className="text-center">
        <h2 className="text-2xl md:text-3xl font-bold text-gray-800 mb-4">
          üë© {t.title}
        </h2>
        <p className="text-lg text-gray-600 mb-6">
          {language === 'hindi' 
            ? '‡§∏‡•Ä‡§ñ‡•á‡§Ç, ‡§ï‡§Æ‡§æ‡§è‡§Ç, ‡§î‡§∞ ‡§∏‡§æ‡§• ‡§Æ‡§ø‡§≤‡§ï‡§∞ ‡§¨‡§¢‡§º‡•á‡§Ç!'
            : 'Learn, Earn, and Grow Together!'
          }
        </p>
      </div>

      <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
        <TabsList className="grid w-full grid-cols-4 mb-6">
          <TabsTrigger value="learn" className="text-sm">üìö {t.learn}</TabsTrigger>
          <TabsTrigger value="sell" className="text-sm">üõçÔ∏è {t.sell}</TabsTrigger>
          <TabsTrigger value="connect" className="text-sm">üí¨ {t.connect}</TabsTrigger>
          <TabsTrigger value="invest" className="text-sm">üí∞ {t.invest}</TabsTrigger>
        </TabsList>

        {/* Learn Tab */}
        <TabsContent value="learn" className="space-y-6">
          <Card className="border-2 border-purple-300 bg-gradient-to-br from-purple-50 to-pink-50">
            <CardHeader className="bg-gradient-to-r from-purple-400 to-pink-400 text-white text-center">
              <CardTitle className="text-xl">{t.learnSkills}</CardTitle>
            </CardHeader>
            <CardContent className="p-6">
              <div className="grid md:grid-cols-2 gap-4">
                {skillCourses.map((course, index) => (
                  <Card key={index} className="border border-purple-200 hover:shadow-lg transition-all">
                    <CardContent className="p-4">
                      <div className="flex items-start gap-4">
                        <div className="text-4xl">{course.thumbnail}</div>
                        <div className="flex-1">
                          <h4 className="font-bold text-gray-800 mb-2">{course.title}</h4>
                          <div className="flex items-center gap-2 text-sm text-gray-600 mb-2">
                            <span>‚è±Ô∏è {course.duration}</span>
                            <span>üìä {course.level}</span>
                          </div>
                          <div className="flex items-center gap-2 text-sm text-gray-600 mb-3">
                            <Star className="w-4 h-4 text-yellow-500" />
                            <span>{course.rating}</span>
                            <span>üë• {course.students}</span>
                          </div>
                          <Button size="sm" className="bg-purple-500 hover:bg-purple-600 text-white">
                            {t.watchVideo}
                          </Button>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* Sell Tab */}
        <TabsContent value="sell" className="space-y-6">
          <div className="grid gap-6">
            {/* Quick List Product */}
            <Card className="border-2 border-green-300 bg-green-50">
              <CardHeader className="bg-gradient-to-r from-green-400 to-emerald-400 text-white text-center">
                <CardTitle>{language === 'hindi' ? '‡§ù‡§ü‡§™‡§ü ‡§â‡§§‡•ç‡§™‡§æ‡§¶ ‡§¨‡•á‡§ö‡•á‡§Ç' : 'Quick Product Listing'}</CardTitle>
              </CardHeader>
              <CardContent className="p-6">
                <div className="space-y-4">
                  <div className="text-center">
                    <Button className="bg-green-500 hover:bg-green-600 text-white text-lg px-8 py-4 rounded-full">
                      üì∏ {language === 'hindi' ? '‡§´‡•ã‡§ü‡•ã ‡§≤‡•á‡§Ç ‡§î‡§∞ ‡§¨‡•á‡§ö‡•á‡§Ç' : 'Take Photo & Sell'}
                    </Button>
                    <p className="text-sm text-gray-600 mt-2">
                      {language === 'hindi' 
                        ? '‡§¨‡§∏ ‡§´‡•ã‡§ü‡•ã ‡§≤‡•á‡§Ç, ‡§ï‡•Ä‡§Æ‡§§ ‡§¨‡•ã‡§≤‡•á‡§Ç, ‡§î‡§∞ ‡§¨‡•á‡§ö ‡§¶‡•á‡§Ç!'
                        : 'Just take photo, say price, and sell!'
                      }
                    </p>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* Products Marketplace */}
            <Card className="border-2 border-blue-300">
              <CardHeader className="bg-gradient-to-r from-blue-400 to-cyan-400 text-white text-center">
                <CardTitle>{language === 'hindi' ? '‡§ó‡§æ‡§Ç‡§µ ‡§ï‡§æ ‡§¨‡§æ‡§ú‡§æ‡§∞' : 'Village Marketplace'}</CardTitle>
              </CardHeader>
              <CardContent className="p-6">
                <div className="grid md:grid-cols-3 gap-4">
                  {products.map((product, index) => (
                    <Card key={index} className="border border-blue-200 hover:shadow-lg transition-all">
                      <CardContent className="p-4">
                        <div className="text-center">
                          <div className="text-6xl mb-3">{product.image}</div>
                          <h4 className="font-bold text-gray-800 mb-2">{product.name}</h4>
                          <div className="text-2xl font-bold text-green-600 mb-2">{product.price}</div>
                          <div className="text-sm text-gray-600 mb-2">
                            {language === 'hindi' ? '‡§¨‡§®‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡•Ä:' : 'Made by:'} {product.seller}
                          </div>
                          <div className="text-sm text-gray-600 mb-3">üìç {product.location}</div>
                          <div className="flex items-center justify-center gap-1 mb-3">
                            <Star className="w-4 h-4 text-yellow-500" />
                            <span className="text-sm">{product.rating} ({product.reviews})</span>
                          </div>
                          <Button size="sm" className="bg-blue-500 hover:bg-blue-600 text-white w-full">
                            üõí {language === 'hindi' ? '‡§ñ‡§∞‡•Ä‡§¶‡•á‡§Ç' : 'Buy Now'}
                          </Button>
                        </div>
                      </CardContent>
                    </Card>
                  ))}
                </div>
              </CardContent>
            </Card>
          </div>
        </TabsContent>

        {/* Connect Tab */}
        <TabsContent value="connect" className="space-y-6">
          <Card className="border-2 border-pink-300 bg-gradient-to-br from-pink-50 to-rose-50">
            <CardHeader className="bg-gradient-to-r from-pink-400 to-rose-400 text-white text-center">
              <CardTitle>{language === 'hindi' ? '‡§Æ‡§π‡§ø‡§≤‡§æ ‡§ö‡•à‡§ü ‡§ó‡•ç‡§∞‡•Å‡§™' : 'Women\'s Chat Group'}</CardTitle>
            </CardHeader>
            <CardContent className="p-6">
              <div className="space-y-4 max-h-64 overflow-y-auto">
                {chatMessages.map((msg, index) => (
                  <div key={index} className="bg-white rounded-lg p-3 border border-pink-200">
                    <div className="flex items-start justify-between">
                      <div className="flex-1">
                        <div className="font-medium text-pink-700">{msg.user}</div>
                        <div className="text-gray-700 mt-1">{msg.message}</div>
                      </div>
                      <div className="text-xs text-gray-500">{msg.time}</div>
                    </div>
                  </div>
                ))}
              </div>
              <div className="mt-4 flex gap-2">
                <Input placeholder={language === 'hindi' ? '‡§Ö‡§™‡§®‡§æ ‡§∏‡§Ç‡§¶‡•á‡§∂ ‡§≤‡§ø‡§ñ‡•á‡§Ç...' : 'Type your message...'} className="flex-1" />
                <Button className="bg-pink-500 hover:bg-pink-600 text-white">
                  üì§
                </Button>
              </div>
            </CardContent>
          </Card>

          {/* Success Stories */}
          <Card className="border-2 border-yellow-300 bg-gradient-to-br from-yellow-50 to-orange-50">
            <CardHeader className="bg-gradient-to-r from-yellow-400 to-orange-400 text-white text-center">
              <CardTitle>‚≠ê {language === 'hindi' ? '‡§∏‡§´‡§≤‡§§‡§æ ‡§ï‡•Ä ‡§ï‡§π‡§æ‡§®‡§ø‡§Ø‡§æ‡§Ç' : 'Success Stories'}</CardTitle>
            </CardHeader>
            <CardContent className="p-6">
              <div className="space-y-4">
                <div className="bg-white rounded-lg p-4 border border-yellow-200">
                  <div className="flex items-center gap-3 mb-2">
                    <div className="w-12 h-12 bg-gradient-to-r from-pink-400 to-orange-400 rounded-full flex items-center justify-center">
                      <span className="text-2xl">üë©</span>
                    </div>
                    <div>
                      <div className="font-bold text-gray-800">‡§∞‡•á‡§ñ‡§æ ‡§¶‡•á‡§µ‡•Ä - ‡§¨‡§ø‡§π‡§æ‡§∞</div>
                      <div className="text-sm text-gray-600">‡§¨‡•à‡§ó ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡§æ ‡§µ‡•ç‡§Ø‡§µ‡§∏‡§æ‡§Ø</div>
                    </div>
                  </div>
                  <p className="text-gray-700">
                    {language === 'hindi' 
                      ? '"‡§á‡§∏ ‡§Æ‡§π‡•Ä‡§®‡•á ‡§Æ‡•à‡§Ç‡§®‡•á ‚Çπ15,000 ‡§ï‡§Æ‡§æ‡§è! ‡§™‡§π‡§≤‡•á ‡§ï‡§≠‡•Ä ‡§á‡§§‡§®‡•á ‡§™‡•à‡§∏‡•á ‡§®‡§π‡•Ä‡§Ç ‡§¶‡•á‡§ñ‡•á ‡§•‡•á‡•§"'
                      : '"I earned ‚Çπ15,000 this month! Never seen so much money before."'
                    }
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>
        </TabsContent>

        {/* Investment Tab */}
        <TabsContent value="invest" className="space-y-6">
          <Card className="border-2 border-emerald-300 bg-gradient-to-br from-emerald-50 to-green-50">
            <CardHeader className="bg-gradient-to-r from-emerald-400 to-green-400 text-white text-center">
              <CardTitle>{language === 'hindi' ? '‡§Æ‡§π‡§ø‡§≤‡§æ ‡§®‡§ø‡§µ‡•á‡§∂‡§ï ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ' : 'Women Investor Program'}</CardTitle>
            </CardHeader>
            <CardContent className="p-6">
              <div className="space-y-4">
                {investmentOpportunities.map((opportunity, index) => (
                  <Card key={index} className="border border-emerald-200 hover:shadow-lg transition-all">
                    <CardContent className="p-4">
                      <div className="flex items-start justify-between flex-wrap gap-4">
                        <div className="flex-1 min-w-64">
                          <h4 className="font-bold text-gray-800 mb-2">{opportunity.business}</h4>
                          <p className="text-gray-600 mb-3">{opportunity.description}</p>
                          <div className="flex items-center gap-4 text-sm">
                            <span className="text-green-600 font-medium">
                              üéØ {language === 'hindi' ? '‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø:' : 'Target:'} {opportunity.needed}
                            </span>
                            <span className="text-blue-600">
                              üí∞ {language === 'hindi' ? '‡§ú‡•Å‡§ü‡§æ‡§Ø‡§æ:' : 'Raised:'} {opportunity.raised}
                            </span>
                            <span className="text-purple-600">
                              üë• {opportunity.backers} {language === 'hindi' ? '‡§®‡§ø‡§µ‡•á‡§∂‡§ï' : 'backers'}
                            </span>
                          </div>
                          <div className="text-sm text-gray-600 mt-2">
                            {language === 'hindi' ? '‡§â‡§¶‡•ç‡§Ø‡§Æ‡•Ä:' : 'Entrepreneur:'} {opportunity.entrepreneur}
                          </div>
                        </div>
                        <div className="flex flex-col gap-2">
                          <Button className="bg-emerald-500 hover:bg-emerald-600 text-white">
                            üíù {language === 'hindi' ? '‡§®‡§ø‡§µ‡•á‡§∂ ‡§ï‡§∞‡•á‡§Ç' : 'Invest'}
                          </Button>
                          <Button variant="outline" className="border-emerald-300 text-emerald-700">
                            üìä {language === 'hindi' ? '‡§µ‡§ø‡§µ‡§∞‡§£' : 'Details'}
                          </Button>
                        </div>
                      </div>
                      {/* Progress Bar */}
                      <div className="mt-4">
                        <div className="w-full bg-gray-200 rounded-full h-2">
                          <div 
                            className="bg-emerald-500 h-2 rounded-full" 
                            style={{ width: `${(parseInt(opportunity.raised.replace('‚Çπ', '').replace(',', '')) / parseInt(opportunity.needed.replace('‚Çπ', '').replace(',', ''))) * 100}%` }}
                          ></div>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </CardContent>
          </Card>
        </TabsContent>
      </Tabs>
    </div>
  );
};

export default WomensHub;
